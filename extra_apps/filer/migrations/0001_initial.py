# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-09-23 18:42
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import easy_thumbnails.fields
import filer.fields.multistorage_file
import filer.models.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clipboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'clipboard',
                'verbose_name_plural': 'clipboards',
            },
        ),
        migrations.CreateModel(
            name='ClipboardItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clipboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='filer.Clipboard', verbose_name='clipboard')),
            ],
            options={
                'verbose_name': 'clipboard item',
                'verbose_name_plural': 'clipboard items',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', filer.fields.multistorage_file.MultiStorageFileField(blank=True, max_length=255, null=True, upload_to=filer.fields.multistorage_file.generate_filename_multistorage, verbose_name='file')),
                ('_file_size', models.IntegerField(blank=True, null=True, verbose_name='file size')),
                ('sha1', models.CharField(blank=True, default='', max_length=40, verbose_name='sha1')),
                ('has_all_mandatory_data', models.BooleanField(default=False, editable=False, verbose_name='has all mandatory data')),
                ('original_filename', models.CharField(blank=True, max_length=255, null=True, verbose_name='original filename')),
                ('name', models.CharField(blank=True, default='', max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='uploaded at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('is_public', models.BooleanField(default=True, help_text='Disable any permission checking for this file. File will be publicly accessible to anyone.', verbose_name='Permissions disabled')),
                ('ispublic', models.BooleanField(default=False, help_text='\u6240\u6709\u7528\u6237\u53ef\u89c1', verbose_name='\u516c\u5f00')),
            ],
            options={
                'verbose_name': 'file',
                'verbose_name_plural': 'files',
            },
            bases=(models.Model, filer.models.mixins.IconsMixin),
        ),
        migrations.CreateModel(
            name='FilePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('everybody', models.BooleanField(default=False, verbose_name='everybody')),
                ('can_edit', models.SmallIntegerField(blank=True, choices=[(1, '\u5141\u8bb8'), (0, '\u62d2\u7edd')], default=None, null=True, verbose_name='can edit')),
                ('can_read', models.SmallIntegerField(blank=True, choices=[(1, '\u5141\u8bb8'), (0, '\u62d2\u7edd')], default=None, null=True, verbose_name='\u8bfb')),
                ('name', models.CharField(blank=True, default='', max_length=255, unique=True, verbose_name='name')),
                ('groups', models.ManyToManyField(blank=True, null=True, related_name='filer_file_permissions', to='auth.Group', verbose_name='group')),
            ],
            options={
                'verbose_name': 'file permission',
                'verbose_name_plural': '\u89d2\u8272',
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='uploaded at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='modified at')),
                ('description', models.TextField(blank=True, null=True, verbose_name=' \u63cf\u8ff0\u4fe1\u606f')),
                ('diricon', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='img/', verbose_name='\u76ee\u5f55\u56fe\u6807')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='filer_owned_folders', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='filer.Folder', verbose_name='parent')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Folder',
                'verbose_name_plural': '\u77e5\u8bc6\u5e93',
                'permissions': (('can_use_directory_listing', 'Can use directory listing'),),
            },
            bases=(models.Model, filer.models.mixins.IconsMixin),
        ),
        migrations.CreateModel(
            name='FolderPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(0, 'all items'), (1, 'this item only'), (2, 'this item and all children')], default=0, verbose_name='type')),
                ('everybody', models.BooleanField(default=False, verbose_name='everybody')),
                ('can_edit', models.SmallIntegerField(blank=True, choices=[(1, 'allow'), (0, 'deny')], default=None, null=True, verbose_name='can edit')),
                ('can_read', models.SmallIntegerField(blank=True, choices=[(1, 'allow'), (0, 'deny')], default=None, null=True, verbose_name='can read')),
                ('can_add_children', models.SmallIntegerField(blank=True, choices=[(1, 'allow'), (0, 'deny')], default=None, null=True, verbose_name='can add children')),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='filer.Folder', verbose_name='folder')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filer_folder_permissions', to='auth.Group', verbose_name='group')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='filer_folder_permissions', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'folder permission',
                'verbose_name_plural': 'folder permissions',
            },
        ),
        migrations.CreateModel(
            name='ThumbnailOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('width', models.IntegerField(help_text='width in pixel.', verbose_name='width')),
                ('height', models.IntegerField(help_text='height in pixel.', verbose_name='height')),
                ('crop', models.BooleanField(default=True, verbose_name='crop')),
                ('upscale', models.BooleanField(default=True, verbose_name='upscale')),
            ],
            options={
                'ordering': ('width', 'height'),
                'verbose_name': 'thumbnail option',
                'verbose_name_plural': 'thumbnail options',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('_height', models.IntegerField(blank=True, null=True)),
                ('_width', models.IntegerField(blank=True, null=True)),
                ('default_alt_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='default alt text')),
                ('default_caption', models.CharField(blank=True, max_length=255, null=True, verbose_name='default caption')),
                ('subject_location', models.CharField(blank=True, default=b'', max_length=64, verbose_name='subject location')),
                ('file_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='filer_image_file', serialize=False, to='filer.File')),
                ('date_taken', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='date taken')),
                ('author', models.CharField(blank=True, max_length=255, null=True, verbose_name='author')),
                ('must_always_publish_author_credit', models.BooleanField(default=False, verbose_name='must always publish author credit')),
                ('must_always_publish_copyright', models.BooleanField(default=False, verbose_name='must always publish copyright')),
            ],
            options={
                'default_manager_name': 'objects',
                'verbose_name': 'image',
                'verbose_name_plural': 'images',
            },
            bases=('filer.file',),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('file_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='filer.File')),
                ('videourl', models.URLField(blank=True, null=True, verbose_name='\u89c6\u9891\u5730\u5740')),
            ],
            options={
                'verbose_name': '\u89c6\u9891',
                'verbose_name_plural': '\u89c6\u9891',
            },
            bases=('filer.file',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='file',
            name='folder',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='all_files', to='filer.Folder', verbose_name='folder'),
        ),
        migrations.AddField(
            model_name='file',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_files', to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='file',
            name='perm',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='filer.FilePermission', verbose_name='\u6743\u9650'),
        ),
        migrations.AddField(
            model_name='file',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_filer.file_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='clipboarditem',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='filer.File', verbose_name='file'),
        ),
        migrations.AddField(
            model_name='clipboard',
            name='files',
            field=models.ManyToManyField(related_name='in_clipboards', through='filer.ClipboardItem', to='filer.File', verbose_name='files'),
        ),
        migrations.AddField(
            model_name='clipboard',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filer_clipboards', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AlterUniqueTogether(
            name='folder',
            unique_together=set([('parent', 'name')]),
        ),
    ]
